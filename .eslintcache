[{"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts":"1","/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx":"2","/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx":"3","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx":"4","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx":"5","/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts":"6","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx":"7","/Users/richardjarram/code/catonmat/trumpsweeper/src/globals.ts":"8"},{"size":425,"mtime":1607207666653,"results":"9","hashOfConfig":"10"},{"size":1584,"mtime":1608670236936,"results":"11","hashOfConfig":"10"},{"size":501,"mtime":1607208543401,"results":"12","hashOfConfig":"10"},{"size":8276,"mtime":1608756603663,"results":"13","hashOfConfig":"10"},{"size":2031,"mtime":1608248434992,"results":"14","hashOfConfig":"10"},{"size":1257,"mtime":1608248453447,"results":"15","hashOfConfig":"10"},{"size":1521,"mtime":1608756385985,"results":"16","hashOfConfig":"10"},{"size":10111,"mtime":1608672095318,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"18j7g8x",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts",[],["36","37"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx",["38","39"],"import React from 'react';\nimport { GameContext, Difficulty, Theme, Opponent} from './contexts'\nimport { \n  easyBoardState, \n  regularBoardState, \n  hardBoardState, \n  testBoardState,\n  BoardState\n} from './globals'\nimport Board from './components/Board'\nimport Toolbar from './components/Toolbar'\nimport './App.scss';\n\nfunction App() {\n  const [difficulty, setDifficulty] = React.useState(Difficulty.Easy)\n  const [theme, setTheme] = React.useState(Theme.Retro)\n  const [opponent, setOpponent] = React.useState(Opponent.Trump)\n  const [flags, setFlags] = React.useState(0)\n\n  function drawBoard(difficulty: string) {\n    switch(difficulty) {\n      case 'easy':\n        return easyBoardState\n      case 'regular':\n        return regularBoardState\n      case 'hard':\n        return hardBoardState\n      case 'test':\n        return testBoardState\n      default:\n        throw new Error('Unable to draw board.')\n    }\n  }\n\n  function currentFlags(board: BoardState) {\n    return board.flags\n  }\n\n  function maxFlags(board: BoardState) {\n    return board.maxFlags\n  }\n\n  return (\n    <>\n      <GameContext.Provider value={{state: { difficulty, theme, opponent }, setDifficulty, setTheme, setOpponent}}>\n        <h1>APP: </h1>\n        <p>Difficulty: {difficulty}</p>\n        <p>Theme: {theme}</p>\n        <p>Opponent: {opponent}</p>\n        <p>Current Flags: {currentFlags(drawBoard(difficulty))}</p>\n        <p>Max Flags: {maxFlags(drawBoard(difficulty))}</p>\n        <Board {...drawBoard(difficulty)}/>\n        <Toolbar/>\n      </GameContext.Provider>\n    </>\n  )\n}\n\nexport default App;\n","/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx",["40"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/globals.ts",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":18,"column":10,"nodeType":"47","messageId":"48","endLine":18,"endColumn":15},{"ruleId":"45","severity":1,"message":"49","line":18,"column":17,"nodeType":"47","messageId":"48","endLine":18,"endColumn":25},{"ruleId":"45","severity":1,"message":"50","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":18},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"@typescript-eslint/no-unused-vars","'flags' is assigned a value but never used.","Identifier","unusedVar","'setFlags' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]