[{"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts":"1","/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx":"2","/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx":"3","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx":"4","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx":"5","/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts":"6","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx":"7","/Users/richardjarram/code/catonmat/trumpsweeper/src/globals.ts":"8","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/TopPanel.tsx":"9","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/ModalCompletion.tsx":"10"},{"size":425,"mtime":1607207666653,"results":"11","hashOfConfig":"12"},{"size":2452,"mtime":1611458983336,"results":"13","hashOfConfig":"12"},{"size":501,"mtime":1607208543401,"results":"14","hashOfConfig":"12"},{"size":9804,"mtime":1611459554101,"results":"15","hashOfConfig":"12"},{"size":2606,"mtime":1611199158687,"results":"16","hashOfConfig":"12"},{"size":2346,"mtime":1611198749572,"results":"17","hashOfConfig":"12"},{"size":1701,"mtime":1611113606450,"results":"18","hashOfConfig":"12"},{"size":9923,"mtime":1611459393797,"results":"19","hashOfConfig":"12"},{"size":1728,"mtime":1611451186398,"results":"20","hashOfConfig":"12"},{"size":947,"mtime":1611459412553,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1kvdwj7",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts",[],["44","45"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx",["46","47","48"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts",["49"],"import { createContext, useContext } from 'react'\nimport Board from './components/Board'\nimport { GameProgress, BoardState, easyBoardState, NumberOfMines } from './globals'\n\n// contexts for App.tsx\nexport enum Difficulty {\n  Easy = 'easy',\n  Regular = 'regular',\n  Hard = 'hard',\n  Test = 'test'\n}\n\nexport enum Theme {\n  Retro = 'retro',\n  Dusk = 'dusk',\n}\n\nexport enum Opponent {\n  Trump = 'trump',\n  Biden = 'biden',\n}\n\nexport enum Flags {\n  Easy = 3,\n  Regular = 5,\n  Hard = 8,\n  Test = 2,\n}\n\nexport interface GameContextType {\n  difficulty: Difficulty;\n  theme: Theme;\n  opponent: Opponent;\n  gameProgress: GameProgress;\n  flags: number;\n  rightClickHeldDown?: boolean;\n  boardState?: BoardState;\n  numberOfMines?: NumberOfMines;\n  setDifficulty: (Difficulty: Difficulty) => void;\n  setTheme: (Theme: Theme) => void;\n  setOpponent: (Opponent: Opponent) => void;\n  setGameProgress: (GameProgress: GameProgress) => void;\n  setFlags: (Flags: Flags) => void;\n  setRightClickHeldDown?: any;\n  setNumberOfMines: (NumberOfMines: NumberOfMines) => void;\n}\n\n//default game context\nexport const GameContext = createContext<GameContextType>({\n  difficulty: Difficulty.Easy,\n  theme: Theme.Retro,\n  opponent: Opponent.Trump,\n  gameProgress: GameProgress.NewGame,\n  boardState: easyBoardState,\n  flags: Flags.Easy,\n  rightClickHeldDown: false,\n  numberOfMines: NumberOfMines.Easy,\n  setDifficulty: () => {},\n  setTheme: () => {},\n  setOpponent: () => {},\n  setGameProgress: () => {},\n  setFlags: () => {},\n  setRightClickHeldDown: () => {},\n  setNumberOfMines: () => {}\n})\n\nexport const useGameContext = () => useContext(GameContext)\n\n// Context for Toolbar.tsx\nexport interface Options {\n  difficulty: string[];\n  theme: string[];\n  opponent: string[];\n}\n\nexport const GameOptions: Options = {\n  difficulty: [\n    Difficulty.Easy,\n    Difficulty.Regular,\n    Difficulty.Hard,\n    Difficulty.Test\n  ],\n  theme: Object.values(Theme),\n  opponent: Object.values(Opponent),\n}\n\n// mouse context used by avatar in top panel: changes image if the user clicks and holds down the mouse.\nexport interface MouseContextType {\n  rightClickHeldDown: boolean,\n  setRightClickHeldDown?: () => void\n}\n\nexport const defaultMouseContext = createContext<MouseContextType>({\n  rightClickHeldDown: false\n})\n\nexport const useMouseContext = () => useContext(defaultMouseContext)\n","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/globals.ts",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/TopPanel.tsx",["50"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/ModalCompletion.tsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":25,"column":6,"nodeType":"57","endLine":25,"endColumn":32,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"59","line":37,"column":6,"nodeType":"57","endLine":37,"endColumn":20,"suggestions":"60"},{"ruleId":"55","severity":1,"message":"61","line":40,"column":3,"nodeType":"62","endLine":40,"endColumn":12,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":2,"column":8,"nodeType":"62","messageId":"66","endLine":2,"endColumn":13},{"ruleId":"55","severity":1,"message":"67","line":11,"column":3,"nodeType":"62","endLine":11,"endColumn":12,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setFlags'. Either include it or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has missing dependencies: 'boardSize', 'mineMap', and 'numberOfMines'. Either include them or remove the dependency array. If 'setGrid' needs the current value of 'boardSize', you can also switch to useReducer instead of useState and read 'boardSize' in the reducer.",["72"],"React Hook useEffect contains a call to 'setGrid'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [correctlyFlaggedCells, numberOfMines, grid, setGameProgress, boardSize] as a second argument to the useEffect Hook.","Identifier",["73"],"@typescript-eslint/no-unused-vars","'Board' is defined but never used.","unusedVar","React Hook useEffect contains a call to 'setTime'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [gameProgress, time] as a second argument to the useEffect Hook.",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [gameProgress, difficulty, setFlags]",{"range":"83","text":"84"},"Update the dependencies array to be: [boardSize, gameProgress, mineMap, numberOfMines]",{"range":"85","text":"86"},"Add dependencies array: [correctlyFlaggedCells, numberOfMines, grid, setGameProgress, boardSize]",{"range":"87","text":"88"},"Add dependencies array: [gameProgress, time]",{"range":"89","text":"90"},[806,832],"[gameProgress, difficulty, setFlags]",[1206,1220],"[boardSize, gameProgress, mineMap, numberOfMines]",[1645,1645],", [correctlyFlaggedCells, numberOfMines, grid, setGameProgress, boardSize]",[555,555],", [gameProgress, time]"]