[{"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts":"1","/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx":"2","/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx":"3","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx":"4","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx":"5","/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts":"6","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx":"7","/Users/richardjarram/code/catonmat/trumpsweeper/src/globals.ts":"8","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/TopPanel.tsx":"9","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/ModalCompletion.tsx":"10","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Tweet.tsx":"11","/Users/richardjarram/code/catonmat/trumpsweeper/src/data/tweets.ts":"12"},{"size":425,"mtime":1607207666653,"results":"13","hashOfConfig":"14"},{"size":2688,"mtime":1612391906486,"results":"15","hashOfConfig":"14"},{"size":501,"mtime":1607208543401,"results":"16","hashOfConfig":"14"},{"size":10441,"mtime":1612392898742,"results":"17","hashOfConfig":"14"},{"size":2606,"mtime":1611199158687,"results":"18","hashOfConfig":"14"},{"size":2445,"mtime":1612393117774,"results":"19","hashOfConfig":"14"},{"size":2916,"mtime":1612393190476,"results":"20","hashOfConfig":"14"},{"size":10472,"mtime":1612392905602,"results":"21","hashOfConfig":"14"},{"size":1767,"mtime":1611625574025,"results":"22","hashOfConfig":"14"},{"size":947,"mtime":1611459412553,"results":"23","hashOfConfig":"14"},{"size":424,"mtime":1612392979280,"results":"24","hashOfConfig":"14"},{"size":7967,"mtime":1612392254405,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1kvdwj7",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts",[],["53","54"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx",["55"],"import React from 'react';\nimport { GameContext, Difficulty, Theme, Opponent, Flags } from './contexts'\nimport * as Global from './globals'\nimport Board from './components/Board'\nimport Toolbar from './components/Toolbar'\nimport TopPanel from './components/TopPanel'\nimport ModalCompletion from './components/ModalCompletion'\nimport Tweet from './components/Tweet'\nimport { trueTrumpTweets } from './data/tweets'\nimport './App.scss';\n\n// TODO: Add error boundaries to app: https://medium.com/@sgroff04/2-minutes-to-learn-react-16s-componentdidcatch-lifecycle-method-d1a69a1f753\nfunction App() {\n  const [difficulty, setDifficulty] = React.useState(Difficulty.Easy)\n  const [theme, setTheme] = React.useState(Theme.Retro)\n  const [opponent, setOpponent] = React.useState(Opponent.Trump)\n  const [gameProgress, setGameProgress] = React.useState(Global.GameProgress.NewGame)\n  const [flags, setFlags] = React.useState(Flags.Easy)\n  const [rightClickHeldDown, setRightClickHeldDown] = React.useState(false)\n  const [boardState] = React.useState(Global.easyBoardState)\n  const [numberOfMines, setNumberOfMines] = React.useState(Global.NumberOfMines.Easy)\n  const [currentCell, setCurrentCell] = React.useState(Global.emptyCell)\n\n  function drawBoard(difficulty: string) {\n    switch(difficulty) {\n      case 'easy':\n        return Global.easyBoardState\n      case 'regular':\n        return Global.regularBoardState\n      case 'hard':\n        return Global.hardBoardState\n      case 'test':\n        return Global.testBoardState\n      default:\n        throw new Error('Unable to draw board.')\n    }\n  }\n\n  function maxFlags(board: Global.BoardState) {\n    return board.maxFlags\n  }\n\n  return (\n    <>\n      <GameContext.Provider value={{\n          difficulty,\n          theme,\n          opponent,\n          gameProgress,\n          flags,\n          rightClickHeldDown,\n          boardState, //TO DO: remove boardState b/c it is is redundant\n          numberOfMines,\n          setDifficulty,\n          setTheme,\n          setOpponent,\n          setGameProgress,\n          setFlags,\n          setRightClickHeldDown,\n          setNumberOfMines,\n          setCurrentCell\n        }}>\n        {/* <BoardContext.Provider> */}\n        <h1>APP: </h1>\n        <p>Difficulty: {difficulty}</p>\n        <p>Progress: {gameProgress}</p>\n        <p>Theme: {theme}</p>\n        <p>Opponent: {opponent}</p>\n        <p>Current Flags: {flags}</p>\n        <p>Max Flags: {maxFlags(drawBoard(difficulty))}</p>\n        <TopPanel/>\n        <Board {...drawBoard(difficulty)}/>\n        <Toolbar />\n        <ModalCompletion/>\n        <Tweet {...currentCell}/>\n      </GameContext.Provider>\n    </>\n  )\n}\n\nexport default App;\n","/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx",["56","57","58","59"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts",["60","61"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/globals.ts",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/TopPanel.tsx",["62"],"import React, { useEffect } from 'react'\nimport { GameProgress } from '../globals'\nimport { useGameContext } from '../contexts'\nimport './TopPanel.scss'\n\nexport default function TopPanel() {\n  const { gameProgress } = useGameContext()\n  const [time, setTime] = React.useState(0)\n\n  // countdown timer logic\n  useEffect(() => {\n    if (gameProgress === GameProgress.NewGame || gameProgress === GameProgress.Lost) setTime(0) \n    if (gameProgress === GameProgress.InProgress) {\n      const interval = setInterval(() => setTime(time + 1), 1000)\n      return () => clearInterval(interval)\n    }\n  })\n  \n  return (\n    <>\n      <div data-testid='topPanel'>\n        <FlagCounter/>\n        <Avatar gameProgress={gameProgress}/>\n        <div>Timer: <span data-testid='timer'>{time}</span></div>\n      </div>\n    </>\n  )\n}\n\nfunction FlagCounter() {\n  const { flags, numberOfMines } = useGameContext()\n\n  return(\n    <>\n      { numberOfMines && <span data-testid=\"flag-counter\">{numberOfMines - flags}</span> }\n    </>\n  )\n}\n\nfunction Avatar({gameProgress} : { gameProgress: GameProgress}) {\n  let { rightClickHeldDown } = useGameContext()\n  let avatarUrl\n\n  // avatar changes if user holds down left mouse button\n  if (rightClickHeldDown) {\n    avatarUrl = \"/images/retro/avatar/wow.png\"\n  } else {\n    // avatar changes according to game state\n    switch(gameProgress) {\n      case GameProgress.Won:\n        avatarUrl = \"/images/retro/avatar/happy.png\"\n        break\n      case GameProgress.Lost:\n        avatarUrl = \"/images/retro/avatar/sad.png\"\n        break\n      default:\n        avatarUrl = \"/images/retro/avatar/angry.png\"\n        break\n    }\n  }\n\n  return(\n    <>\n      <p>Avatar</p>\n      <img data-testid=\"avatar\" id=\"avatar\" src={avatarUrl} alt=\"\"/>\n    </>\n  )\n}\n","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/ModalCompletion.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Tweet.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/data/tweets.ts",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":9,"column":10,"nodeType":"69","messageId":"70","endLine":9,"endColumn":25},{"ruleId":"67","severity":1,"message":"71","line":1,"column":13,"nodeType":"69","messageId":"70","endLine":1,"endColumn":19},{"ruleId":"72","severity":1,"message":"73","line":25,"column":6,"nodeType":"74","endLine":25,"endColumn":32,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":37,"column":6,"nodeType":"74","endLine":37,"endColumn":20,"suggestions":"77"},{"ruleId":"72","severity":1,"message":"78","line":40,"column":3,"nodeType":"69","endLine":40,"endColumn":12,"suggestions":"79"},{"ruleId":"67","severity":1,"message":"80","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":13},{"ruleId":"67","severity":1,"message":"81","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":12},{"ruleId":"72","severity":1,"message":"82","line":11,"column":3,"nodeType":"69","endLine":11,"endColumn":12,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"@typescript-eslint/no-unused-vars","'trueTrumpTweets' is defined but never used.","Identifier","unusedVar","'sample' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setFlags'. Either include it or remove the dependency array.","ArrayExpression",["86"],"React Hook useEffect has missing dependencies: 'boardSize', 'mineMap', and 'numberOfMines'. Either include them or remove the dependency array. If 'setGrid' needs the current value of 'boardSize', you can also switch to useReducer instead of useState and read 'boardSize' in the reducer.",["87"],"React Hook useEffect contains a call to 'setGrid'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [correctlyFlaggedCells, numberOfMines, grid, setGameProgress, boardSize] as a second argument to the useEffect Hook.",["88"],"'Board' is defined but never used.","'Cell' is defined but never used.","React Hook useEffect contains a call to 'setTime'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [gameProgress, time] as a second argument to the useEffect Hook.",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [gameProgress, difficulty, setFlags]",{"range":"98","text":"99"},"Update the dependencies array to be: [boardSize, gameProgress, mineMap, numberOfMines]",{"range":"100","text":"101"},"Add dependencies array: [correctlyFlaggedCells, numberOfMines, grid, setGameProgress, boardSize]",{"range":"102","text":"103"},"Add dependencies array: [gameProgress, time]",{"range":"104","text":"105"},[884,910],"[gameProgress, difficulty, setFlags]",[1284,1298],"[boardSize, gameProgress, mineMap, numberOfMines]",[1723,1723],", [correctlyFlaggedCells, numberOfMines, grid, setGameProgress, boardSize]",[594,594],", [gameProgress, time]"]