[{"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts":"1","/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx":"2","/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx":"3","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx":"4","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx":"5","/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts":"6","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx":"7","/Users/richardjarram/code/catonmat/trumpsweeper/src/globals.ts":"8","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/TopPanel.tsx":"9"},{"size":425,"mtime":1607207666653,"results":"10","hashOfConfig":"11"},{"size":1900,"mtime":1609282960568,"results":"12","hashOfConfig":"11"},{"size":501,"mtime":1607208543401,"results":"13","hashOfConfig":"11"},{"size":9320,"mtime":1609444011784,"results":"14","hashOfConfig":"11"},{"size":2147,"mtime":1609281230492,"results":"15","hashOfConfig":"11"},{"size":1508,"mtime":1609282453479,"results":"16","hashOfConfig":"11"},{"size":1488,"mtime":1609281334483,"results":"17","hashOfConfig":"11"},{"size":9891,"mtime":1609281517825,"results":"18","hashOfConfig":"11"},{"size":723,"mtime":1609281911109,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"18j7g8x",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts",[],["40","41"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx",["42"],"import React from 'react';\nimport { GameContext, Difficulty, Theme, Opponent, Flags} from './contexts'\nimport * as Global from './globals'\nimport Board from './components/Board'\nimport Toolbar from './components/Toolbar'\nimport TopPanel from './components/TopPanel'\nimport './App.scss';\n\n// TODO: Add error boundaries to app: https://medium.com/@sgroff04/2-minutes-to-learn-react-16s-componentdidcatch-lifecycle-method-d1a69a1f753\nfunction App() {\n  const [difficulty, setDifficulty] = React.useState(Difficulty.Easy)\n  const [theme, setTheme] = React.useState(Theme.Retro)\n  const [opponent, setOpponent] = React.useState(Opponent.Trump)\n  const [gameProgress, setGameProgress] = React.useState(Global.GameProgress.NewGame)\n  const [flags, setFlags] = React.useState(Flags.Easy)\n\n  function drawBoard(difficulty: string) {\n    switch(difficulty) {\n      case 'easy':\n        return Global.easyBoardState\n      case 'regular':\n        return Global.regularBoardState\n      case 'hard':\n        return Global.hardBoardState\n      case 'test':\n        return Global.testBoardState\n      default:\n        throw new Error('Unable to draw board.')\n    }\n  }\n\n  function currentFlags(board: Global.BoardState) {\n    return board.flags\n  }\n\n  function maxFlags(board: Global.BoardState) {\n    return board.maxFlags\n  }\n\n  return (\n    <>\n      <GameContext.Provider value={{difficulty, theme, opponent, gameProgress, flags, setDifficulty, setTheme, setOpponent, setGameProgress, setFlags}}>\n        {/* <BoardContext.Provider> */}\n        <h1>APP: </h1>\n        <p>Difficulty: {difficulty}</p>\n        <p>Theme: {theme}</p>\n        <p>Opponent: {opponent}</p>\n        <p>Current Flags: {flags}</p>\n        <p>Max Flags: {maxFlags(drawBoard(difficulty))}</p>\n        <TopPanel/>\n        <Board {...drawBoard(difficulty)}/>\n        <Toolbar />\n      </GameContext.Provider>\n    </>\n  )\n}\n\nexport default App;\n","/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx",["43","44"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/globals.ts",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/TopPanel.tsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":32,"column":12,"nodeType":"51","messageId":"52","endLine":32,"endColumn":24},{"ruleId":"53","severity":1,"message":"54","line":29,"column":6,"nodeType":"55","endLine":29,"endColumn":32,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":31,"column":3,"nodeType":"51","endLine":31,"endColumn":12,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'currentFlags' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setFlags'. Either include it or remove the dependency array.","ArrayExpression",["61"],"React Hook useEffect contains a call to 'setGrid'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [correctlyFlaggedCells, numberOfMines, grid, setGameProgress, boardSize] as a second argument to the useEffect Hook.",["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [gameProgress, difficulty, setFlags]",{"range":"67","text":"68"},"Add dependencies array: [correctlyFlaggedCells, numberOfMines, grid, setGameProgress, boardSize]",{"range":"69","text":"70"},[920,946],"[gameProgress, difficulty, setFlags]",[1327,1327],", [correctlyFlaggedCells, numberOfMines, grid, setGameProgress, boardSize]"]