[{"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts":"1","/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx":"2","/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx":"3","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx":"4","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx":"5","/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts":"6","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx":"7"},{"size":425,"mtime":1607207666653,"results":"8","hashOfConfig":"9"},{"size":773,"mtime":1607902756422,"results":"10","hashOfConfig":"9"},{"size":501,"mtime":1607208543401,"results":"11","hashOfConfig":"9"},{"size":917,"mtime":1607988420528,"results":"12","hashOfConfig":"9"},{"size":1959,"mtime":1607899443661,"results":"13","hashOfConfig":"9"},{"size":1221,"mtime":1607985184395,"results":"14","hashOfConfig":"9"},{"size":619,"mtime":1607998359865,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"18j7g8x",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts",[],["33","34"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx",["35","36"],"/** @jsxImportSource @emotion/react */\n// import { jsx } from '@emotion/react'\nimport { useState } from 'react'\nimport Cell from './Cell'\nimport { useSettings, Difficulty } from '../contexts'\nimport { CellState } from '../globals'\nimport './Board.scss'\n\nfunction Board() { \n  const { state: { difficulty } } = useSettings();\n  const [ newGame, setNewGame ] = useState<boolean>(true)\n\n  const cellState: CellState = {\n    location: [0, 0],\n    clicked: false,\n    mine: true,\n    flagged: false,\n    neighbors: 0,\n  } \n\n  return (\n    <div className='board-container'>\n      Hello from the board component!!!\n      {\n        difficulty === Difficulty.Easy && (<Cell {...cellState}></Cell>)\n      }\n      {\n        difficulty === Difficulty.Regular && (<Cell {...cellState}></Cell>)\n      }\n      {\n        difficulty === Difficulty.Hard && (<Cell {...cellState}></Cell>)\n      }\n    </div>\n  )\n}\n\nexport default Board\n","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx",["37"],"import { CellState } from '../globals'\nimport './Cell.scss'\n\nfunction Cell({ location, clicked, mine, flagged, neighbors }: CellState) {\n  // buildStyle(clicked, mine, flagged, neighbors)\n  return(\n    <div className='cell' data-testid='cell' style={{backgroundImage: `url('/images/retro/unopened.svg')`}}>\n      CELL\n    </div>\n  )\n}\n//'background-image': 'url(../images/retro/unopened.svg)'\n\nfunction buildStyle(clicked: boolean, mine: boolean, flagged: boolean, neighbors: number) {\n  // unopened\n  !clicked && !flagged && console.log('worked')\n  // flagged\n  // mine\n  // opened (neighbors)\n}\n\nexport default Cell;\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":11,"column":11,"nodeType":"44","messageId":"45","endLine":11,"endColumn":18},{"ruleId":"42","severity":1,"message":"46","line":11,"column":20,"nodeType":"44","messageId":"45","endLine":11,"endColumn":30},{"ruleId":"42","severity":1,"message":"47","line":14,"column":10,"nodeType":"44","messageId":"45","endLine":14,"endColumn":20},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"@typescript-eslint/no-unused-vars","'newGame' is assigned a value but never used.","Identifier","unusedVar","'setNewGame' is assigned a value but never used.","'buildStyle' is defined but never used.","no-global-assign","no-unsafe-negation"]