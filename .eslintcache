[{"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts":"1","/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx":"2","/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx":"3","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx":"4","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx":"5","/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts":"6","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx":"7","/Users/richardjarram/code/catonmat/trumpsweeper/src/globals.ts":"8","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/TopPanel.tsx":"9"},{"size":425,"mtime":1607207666653,"results":"10","hashOfConfig":"11"},{"size":1873,"mtime":1609280773670,"results":"12","hashOfConfig":"11"},{"size":501,"mtime":1607208543401,"results":"13","hashOfConfig":"11"},{"size":9533,"mtime":1609280807732,"results":"14","hashOfConfig":"11"},{"size":2141,"mtime":1608775836284,"results":"15","hashOfConfig":"11"},{"size":1214,"mtime":1609280789592,"results":"16","hashOfConfig":"11"},{"size":1521,"mtime":1608756385985,"results":"17","hashOfConfig":"11"},{"size":10183,"mtime":1608841655893,"results":"18","hashOfConfig":"11"},{"size":741,"mtime":1609107975127,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"18j7g8x",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts",[],["41","42"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx",["43","44","45","46"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx",["47","48"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx",["49"],"import { useState } from 'react'\nimport { CellState } from '../globals'\nimport './Cell.scss'\n\nfunction Cell({ location, clicked, mine, flagged, neighbors, updateBoard }: CellState) {\n  const style: object = setStyle(location, clicked, mine, flagged, neighbors)\n\n  function rightClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>, row: number, col: number) {\n    event.preventDefault()\n    flagged = true\n    updateBoard && updateBoard(location[0], location[1], true)\n  }\n\n  return(\n    <div  className='cell' \n          data-testid={`${location[0]}-${location[1]}`} \n          style={style}\n          onContextMenu={(event) => rightClick(event, location[0], location[1])}\n          onClick={() => updateBoard ? updateBoard(location[0], location[1]) : console.error('unable to upate cell')}\n    >\n    </div>\n  )\n}\n\nfunction setStyle(location: [number, number], clicked: boolean, mine: boolean, flagged: boolean, neighbors: number) {\n  const skin = { \n    backgroundImage: `url(/images/retro/unopened.svg)`,\n    gridArea: `${location[0]}-${location[1]}`\n  }\n\n  if (flagged) {\n    skin.backgroundImage = `url(/images/retro/flag.svg)`\n  } else if (clicked && mine) {\n    skin.backgroundImage = `url(/images/retro/mine.png)`\n  } else if (clicked && !mine && !flagged && neighbors === 0) {\n    skin.backgroundImage = `url(/images/retro/opened.svg)`\n  } else if (clicked && !mine && !flagged && neighbors > 0) {\n    skin.backgroundImage = `url(/images/retro/${neighbors}.svg)`\n  }\n\n  return skin;\n}\n\nexport default Cell;\n","/Users/richardjarram/code/catonmat/trumpsweeper/src/globals.ts",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/TopPanel.tsx",["50"],"import React, { useEffect } from 'react'\nimport { BoardState, GameProgress } from '../globals'\n\nexport default function TopPanel({gameProgress, boardSize, numberOfMines, mineMap, flags, maxFlags} : BoardState) {\n  const [time, setTime] = React.useState(0)\n\n  useEffect(() => {\n    console.log(gameProgress)\n    if (gameProgress === GameProgress.InProgress) {\n      const interval = setInterval(() => setTime(time + 1), 1000)\n      return () => clearInterval(interval)\n    }\n  }, [time])\n  \n  return (\n    <>\n      <div data-testid='topPanel'>\n        <Avatar/>\n        <div data-testid='timer' >Timer: {time}</div>\n      </div>\n    </>\n  )\n}\n\nfunction Avatar() {\n  return(\n    <>\n      <p>Avatar</p>\n      <img src=\"\" alt=\"\"/>\n    </>\n  )\n}\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":9,"column":3,"nodeType":"57","messageId":"58","endLine":9,"endColumn":15},{"ruleId":"55","severity":1,"message":"59","line":13,"column":8,"nodeType":"57","messageId":"58","endLine":13,"endColumn":16},{"ruleId":"55","severity":1,"message":"60","line":21,"column":10,"nodeType":"57","messageId":"58","endLine":21,"endColumn":15},{"ruleId":"55","severity":1,"message":"61","line":21,"column":17,"nodeType":"57","messageId":"58","endLine":21,"endColumn":25},{"ruleId":"55","severity":1,"message":"62","line":20,"column":11,"nodeType":"57","messageId":"58","endLine":20,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":45,"column":6,"nodeType":"65","endLine":45,"endColumn":29,"suggestions":"66"},{"ruleId":"55","severity":1,"message":"67","line":1,"column":10,"nodeType":"57","messageId":"58","endLine":1,"endColumn":18},{"ruleId":"63","severity":1,"message":"68","line":13,"column":6,"nodeType":"65","endLine":13,"endColumn":12,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"@typescript-eslint/no-unused-vars","'BoardContext' is defined but never used.","Identifier","unusedVar","'TopPanel' is defined but never used.","'flags' is assigned a value but never used.","'setFlags' is assigned a value but never used.","'currentGameProgress' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'boardSize', 'grid', and 'numberOfMines'. Either include them or remove the dependency array.","ArrayExpression",["72"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'gameProgress'. Either include it or remove the dependency array.",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [boardSize, correctlyFlaggedCells, grid, numberOfMines]",{"range":"78","text":"79"},"Update the dependencies array to be: [gameProgress, time]",{"range":"80","text":"81"},[1473,1496],"[boardSize, correctlyFlaggedCells, grid, numberOfMines]",[479,485],"[gameProgress, time]"]