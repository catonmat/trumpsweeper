[{"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts":"1","/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx":"2","/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx":"3","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx":"4","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx":"5","/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts":"6","/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx":"7","/Users/richardjarram/code/catonmat/trumpsweeper/src/globals.ts":"8"},{"size":425,"mtime":1607207666653,"results":"9","hashOfConfig":"10"},{"size":1584,"mtime":1608670236936,"results":"11","hashOfConfig":"10"},{"size":501,"mtime":1607208543401,"results":"12","hashOfConfig":"10"},{"size":8097,"mtime":1608672071938,"results":"13","hashOfConfig":"10"},{"size":2031,"mtime":1608248434992,"results":"14","hashOfConfig":"10"},{"size":1257,"mtime":1608248453447,"results":"15","hashOfConfig":"10"},{"size":1521,"mtime":1608668997460,"results":"16","hashOfConfig":"10"},{"size":10111,"mtime":1608672095318,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"18j7g8x",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/richardjarram/code/catonmat/trumpsweeper/src/reportWebVitals.ts",[],["36","37"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/App.tsx",["38","39"],"/Users/richardjarram/code/catonmat/trumpsweeper/src/index.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Board.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Toolbar.tsx",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/contexts.ts",[],"/Users/richardjarram/code/catonmat/trumpsweeper/src/components/Cell.tsx",["40"],"import { useState } from 'react'\nimport { CellState } from '../globals'\nimport './Cell.scss'\n\nfunction Cell({ location, clicked, mine, flagged, neighbors, updateBoard }: CellState) {\n  const style: object = setStyle(location, clicked, mine, flagged, neighbors)\n\n  function rightClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>, row: number, col: number) {\n    event.preventDefault()\n    flagged = true\n    updateBoard && updateBoard(location[0], location[1], true)\n  }\n\n  return(\n    <div  className='cell' \n          data-testid={`${location[0]}-${location[1]}`} \n          style={style}\n          onContextMenu={(event) => rightClick(event, location[0], location[1])}\n          onClick={() => updateBoard ? updateBoard(location[0], location[1]) : console.error('unable to upate cell')}\n    >\n    </div>\n  )\n}\n\nfunction setStyle(location: [number, number], clicked: boolean, mine: boolean, flagged: boolean, neighbors: number) {\n  const skin = { \n    backgroundImage: `url(/images/retro/unopened.svg)`,\n    gridArea: `${location[0]}-${location[1]}`\n  }\n\n  if (flagged) {\n    skin.backgroundImage = `url(/images/retro/flag.svg)`\n  } else if (clicked && mine) {\n    skin.backgroundImage = `url(/images/retro/mine.png)`\n  } else if (clicked && !mine && !flagged && neighbors === 0) {\n    skin.backgroundImage = `url(/images/retro/opened.svg)`\n  } else if (clicked && !mine && !flagged && neighbors > 0) {\n    skin.backgroundImage = `url(/images/retro/${neighbors}.svg)`\n  }\n\n  return skin;\n}\n\nexport default Cell;\n","/Users/richardjarram/code/catonmat/trumpsweeper/src/globals.ts",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":18,"column":10,"nodeType":"47","messageId":"48","endLine":18,"endColumn":15},{"ruleId":"45","severity":1,"message":"49","line":18,"column":17,"nodeType":"47","messageId":"48","endLine":18,"endColumn":25},{"ruleId":"45","severity":1,"message":"50","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":18},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"@typescript-eslint/no-unused-vars","'flags' is assigned a value but never used.","Identifier","unusedVar","'setFlags' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]